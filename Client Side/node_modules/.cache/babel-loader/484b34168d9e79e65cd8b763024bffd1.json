{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beryl\\\\Music\\\\DogBarber\\\\Client Side\\\\src\\\\components\\\\PutApp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useToasts } from \"react-toast-notifications\";\nimport * as actions from \"../actions/queue\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport useForm from \"./Form\";\nconst initialFieldValues = {\n  id: '',\n  clientId: parseInt(JSON.parse(localStorage.getItem(\"CurrentClient\")).id),\n  appointmentHour: ' ',\n  bookingHour: ''\n};\n\nconst PutApp = ({\n  classes,\n  ...props\n}) => {\n  const {\n    addToast\n  } = useToasts();\n\n  const validation = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('appointmentHour' in fieldValues) {\n      temp.appointmentHour = fieldValues.appointmentHour ? \"\" : \"Please enter an hour so that we can book you an appointment.\";\n    }\n\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validation);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setValues({ ...props.queue.find(x => x.id == props.record.id)\n    });\n    setErrors({});\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const rescheduleApp = () => {\n    handleClose();\n\n    if (validation()) {\n      const onSuccess = () => {\n        addToast(\"Submitted successfully\", {\n          appearance: 'success'\n        });\n        resetForm();\n      };\n\n      props.putApp(values.id, values, onSuccess);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Rescheduling\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \" To reschedule your appointment, please pick a time and date \"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"appointmentHour\",\n    id: \"datetime-local\",\n    label: \"Appointment hour\",\n    type: \"datetime-local\",\n    value: values.appointmentHour,\n    onChange: handleInputChange,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \" Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: rescheduleApp,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \" Reschedule Appointment\"))));\n};\n\nconst mapStateToProps = state => ({\n  queue: state.queue.list\n});\n\nconst mapActionToProps = {\n  putApp: actions.update\n};\nexport default connect(mapStateToProps, mapActionToProps)(PutApp);","map":{"version":3,"sources":["C:/Users/beryl/Music/DogBarber/Client Side/src/components/PutApp.js"],"names":["React","useState","useEffect","connect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useToasts","actions","EditIcon","useForm","initialFieldValues","id","clientId","parseInt","JSON","parse","localStorage","getItem","appointmentHour","bookingHour","PutApp","classes","props","addToast","validation","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","open","setOpen","handleClickOpen","queue","find","record","handleClose","rescheduleApp","onSuccess","appearance","putApp","shrink","mapStateToProps","state","list","mapActionToProps","update"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport * as actions from \"../actions/queue\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport useForm from \"./Form\";\r\n\r\nconst initialFieldValues = {\r\n    id: '',\r\n    clientId: parseInt(JSON.parse(localStorage.getItem(\"CurrentClient\")).id),\r\n    appointmentHour: ' ',\r\n    bookingHour: '',\r\n}\r\n\r\nconst PutApp = ({ classes, ...props }) => {\r\n    const { addToast } = useToasts()\r\n\r\n    const validation = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('appointmentHour' in fieldValues) {\r\n            temp.appointmentHour = fieldValues.appointmentHour ? \"\" : \"Please enter an hour so that we can book you an appointment.\"\r\n        }\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validation)\r\n\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        setValues({\r\n            ...props.queue.find(x => x.id == props.record.id)\r\n        })\r\n        setErrors({})\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const rescheduleApp = () => {\r\n        handleClose();\r\n        if (validation()) {\r\n            const onSuccess = () => {\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n                resetForm()\r\n            }\r\n            props.putApp(values.id, values, onSuccess);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button><EditIcon color=\"primary\" onClick={handleClickOpen} /></Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Rescheduling</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText> To reschedule your appointment, please pick a time and date </DialogContentText>\r\n                    <TextField\r\n                        name=\"appointmentHour\"\r\n                        id=\"datetime-local\"\r\n                        label=\"Appointment hour\"\r\n                        type=\"datetime-local\"\r\n                        value={values.appointmentHour}\r\n                        onChange={handleInputChange}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\"> Cancel</Button>\r\n                    <Button onClick={rescheduleApp} color=\"primary\"> Reschedule Appointment</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queue: state.queue.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    putApp: actions.update,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(PutApp);\r\n"]},"metadata":{},"sourceType":"module"}