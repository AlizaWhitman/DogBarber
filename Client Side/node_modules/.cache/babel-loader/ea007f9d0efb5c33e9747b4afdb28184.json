{"ast":null,"code":"import api from \"./api\";\nexport const ACTION_TYPES = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE',\n  GET: 'GET'\n};\n\nconst formatData = data => ({ ...data,\n  id: parseInt(data.id ? data.id : 0)\n});\n\nexport const get = (data, onSuccess, onFailure) => dispatch => {\n  data = formatData(data);\n  api.client().getClient(data).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET,\n      payload: response.data\n    });\n\n    if (response.data) {\n      localStorage.setItem(\"CurrentClient\", JSON.stringify(response.data));\n      onSuccess();\n    } else {\n      onFailure();\n    }\n  }).catch();\n};\nexport const create = (data, onSuccess, onFailure) => dispatch => {\n  data = formatData(data);\n  api.client().create(data).then(res => {\n    dispatch({\n      type: ACTION_TYPES.CREATE,\n      payload: res.data\n    });\n\n    if (res) {\n      localStorage.setItem(\"CurrentClient\", JSON.stringify(res.data));\n      onSuccess();\n    }\n  }).catch(onFailure());\n};","map":{"version":3,"sources":["C:/Users/beryl/Music/DogBarber/Client Side/src/actions/client.js"],"names":["api","ACTION_TYPES","CREATE","UPDATE","DELETE","GET","formatData","data","id","parseInt","get","onSuccess","onFailure","dispatch","client","getClient","then","response","type","payload","localStorage","setItem","JSON","stringify","catch","create","res"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,QADgB;AAExBC,EAAAA,MAAM,EAAE,QAFgB;AAGxBC,EAAAA,MAAM,EAAE,QAHgB;AAIxBC,EAAAA,GAAG,EAAE;AAJmB,CAArB;;AAOP,MAAMC,UAAU,GAAGC,IAAI,KAAK,EACxB,GAAGA,IADqB;AAExBC,EAAAA,EAAE,EAAEC,QAAQ,CAACF,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACC,EAAf,GAAoB,CAArB;AAFY,CAAL,CAAvB;;AAKA,OAAO,MAAME,GAAG,GAAG,CAACH,IAAD,EAAOI,SAAP,EAAkBC,SAAlB,KAAgCC,QAAQ,IAAI;AAC3DN,EAAAA,IAAI,GAAGD,UAAU,CAACC,IAAD,CAAjB;AACAP,EAAAA,GAAG,CAACc,MAAJ,GAAaC,SAAb,CAAuBR,IAAvB,EACKS,IADL,CAEQC,QAAQ,IAAI;AACRJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB,YAAY,CAACI,GADd;AAELc,MAAAA,OAAO,EAAEF,QAAQ,CAACV;AAFb,KAAD,CAAR;;AAIA,QAAGU,QAAQ,CAACV,IAAZ,EAAiB;AACba,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACV,IAAxB,CAAtC;AACAI,MAAAA,SAAS;AACZ,KAHD,MAII;AACAC,MAAAA,SAAS;AAEZ;AACJ,GAfT,EAgBKY,KAhBL;AAiBH,CAnBM;AAqBP,OAAO,MAAMC,MAAM,GAAG,CAAClB,IAAD,EAAOI,SAAP,EAAkBC,SAAlB,KAAgCC,QAAQ,IAAI;AAC9DN,EAAAA,IAAI,GAAGD,UAAU,CAACC,IAAD,CAAjB;AACAP,EAAAA,GAAG,CAACc,MAAJ,GAAaW,MAAb,CAAoBlB,IAApB,EACKS,IADL,CACUU,GAAG,IAAI;AACTb,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB,YAAY,CAACC,MADd;AAELiB,MAAAA,OAAO,EAAEO,GAAG,CAACnB;AAFR,KAAD,CAAR;;AAIA,QAAGmB,GAAH,EAAO;AACHN,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeG,GAAG,CAACnB,IAAnB,CAAtC;AACAI,MAAAA,SAAS;AACZ;AACJ,GAVL,EAWKa,KAXL,CAWWZ,SAAS,EAXpB;AAYH,CAdM","sourcesContent":["import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE: 'CREATE',\r\n    UPDATE: 'UPDATE',\r\n    DELETE: 'DELETE',\r\n    GET: 'GET'\r\n}\r\n\r\nconst formatData = data => ({\r\n    ...data,\r\n    id: parseInt(data.id ? data.id : 0)\r\n})\r\n\r\nexport const get = (data, onSuccess, onFailure) => dispatch => {\r\n    data = formatData(data)\r\n    api.client().getClient(data)\r\n        .then(\r\n            response => {\r\n                dispatch({\r\n                    type: ACTION_TYPES.GET,\r\n                    payload: response.data,\r\n                })\r\n                if(response.data){\r\n                    localStorage.setItem(\"CurrentClient\", JSON.stringify(response.data))\r\n                    onSuccess()\r\n                } \r\n                else{\r\n                    onFailure()\r\n          \r\n                }\r\n            })\r\n        .catch()\r\n}\r\n\r\nexport const create = (data, onSuccess, onFailure) => dispatch => {\r\n    data = formatData(data)\r\n    api.client().create(data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACTION_TYPES.CREATE,\r\n                payload: res.data\r\n            })\r\n            if(res){\r\n                localStorage.setItem(\"CurrentClient\", JSON.stringify(res.data))\r\n                onSuccess()\r\n            }\r\n        })\r\n        .catch(onFailure())\r\n}\r\n"]},"metadata":{},"sourceType":"module"}