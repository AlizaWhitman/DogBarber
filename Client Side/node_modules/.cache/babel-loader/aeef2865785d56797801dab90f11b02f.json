{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beryl\\\\Music\\\\DogBarber\\\\Client Side\\\\src\\\\components\\\\SignInForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText, colors, decomposeColor, Link } from \"@material-ui/core\";\nimport useForm from \"./Form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, 'Copyright Â© ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://www.linkedin.com/in/alizawhitman/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Aliza Whitman linkedin\"), ' ', new Date().getFullYear());\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nconst initialFieldValues = {\n  id: '',\n  firstName: '',\n  userName: '',\n  password: ''\n};\n\nconst SignIn = ({ ...props\n}) => {\n  const {\n    addToast\n  } = useToasts();\n\n  const validation = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('userName' in fieldValues) temp.userName = fieldValues.userName ? \"\" : \"This field is required.\";\n    if ('password' in fieldValues) temp.password = fieldValues.password ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const classes = useStyles();\n  const {\n    values,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validation);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validation()) {\n      const onSuccess = () => {\n        addToast(\"Loged In Successfully, Welcome \" + JSON.parse(localStorage.getItem(\"CurrentClient\")).userName, {\n          appearance: 'success'\n        });\n        window.location.replace(\"/queue\");\n      };\n\n      const onFailure = () => {\n        addToast(\"Sorry, but we have encountered an issue while connecting. Please make sure your details are correct, and if the problem continues please signup as a new client. Thank you\", {\n          appearance: 'error'\n        });\n        resetForm();\n      };\n\n      props.get(values, onSuccess, onFailure);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"UserName\",\n    label: \"User Name\",\n    name: \"userName\",\n    value: values.userName,\n    onChange: handleInputChange\n  }, errors.userName && {\n    error: true,\n    helperText: errors.userName\n  }, {\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: values.password,\n    onChange: handleInputChange\n  }, errors.password && {\n    error: true,\n    helperText: errors.password\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Sign In \"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Don't have an account? Sign Up\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapActionToProps = {\n  get: actions.get\n};\nexport default connect(mapStateToProps, mapActionToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/beryl/Music/DogBarber/Client Side/src/components/SignInForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","colors","decomposeColor","Link","useForm","connect","actions","useToasts","Avatar","CssBaseline","Box","LockOutlinedIcon","Typography","makeStyles","Container","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","initialFieldValues","id","firstName","userName","password","SignIn","props","addToast","validation","fieldValues","values","temp","errors","setErrors","Object","every","x","classes","handleInputChange","resetForm","handleSubmit","e","preventDefault","onSuccess","JSON","parse","localStorage","getItem","appearance","window","location","replace","onFailure","get","error","helperText","mapStateToProps","state","mapActionToProps"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,UAAnD,EAA+DC,MAA/D,EAAuEC,QAAvE,EAAiFC,MAAjF,EAAyFC,cAAzF,EAAyGC,MAAzG,EAAiHC,cAAjH,EAAiIC,IAAjI,QAA6I,mBAA7I;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,SAAT,GAAqB;AACjB,sBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,cADL,eAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,2CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAIM,GAJN,EAKK,IAAIC,IAAJ,GAAWC,WAAX,EALL,CADJ;AASH;;AAED,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEHC,IAAAA,OAAO,EAAE,MAFN;AAGHC,IAAAA,aAAa,EAAE,QAHZ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAEJM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFrC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACJP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADJ;AAf6B,CAAZ,CAAD,CAA5B;AAoBA,MAAMa,kBAAkB,GAAG;AACvBC,EAAAA,EAAE,EAAE,EADmB;AAEvBC,EAAAA,SAAS,EAAE,EAFY;AAGvBC,EAAAA,QAAQ,EAAE,EAHa;AAIvBC,EAAAA,QAAQ,EAAE;AAJa,CAA3B;;AAOA,MAAMC,MAAM,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AAE7B,QAAM;AAAEC,IAAAA;AAAF,MAAenC,SAAS,EAA9B;;AAEA,QAAMoC,UAAU,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACzC,QAAIC,IAAI,GAAG,EAAE,GAAGC;AAAL,KAAX;AACA,QAAI,cAAcH,WAAlB,EACIE,IAAI,CAACR,QAAL,GAAgBM,WAAW,CAACN,QAAZ,GAAuB,EAAvB,GAA4B,yBAA5C;AACJ,QAAI,cAAcM,WAAlB,EACIE,IAAI,CAACP,QAAL,GAAgBK,WAAW,CAACL,QAAZ,GAAuB,EAAvB,GAA4B,yBAA5C;AAEJS,IAAAA,SAAS,CAAC,EACN,GAAGF;AADG,KAAD,CAAT;AAIA,QAAIF,WAAW,IAAIC,MAAnB,EACI,OAAOI,MAAM,CAACJ,MAAP,CAAcC,IAAd,EAAoBI,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACP,GAbD;;AAeA,QAAMC,OAAO,GAAGlC,SAAS,EAAzB;AAEA,QAAM;AACF2B,IAAAA,MADE;AAEFE,IAAAA,MAFE;AAGFC,IAAAA,SAHE;AAIFK,IAAAA,iBAJE;AAKFC,IAAAA;AALE,MAMFlD,OAAO,CAAC+B,kBAAD,EAAqBQ,UAArB,CANX;;AAQA,QAAMY,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAId,UAAU,EAAd,EAAkB;AACd,YAAMe,SAAS,GAAG,MAAM;AACpBhB,QAAAA,QAAQ,CAAC,oCAAoCiB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,EAAkDxB,QAAvF,EAAiG;AAAEyB,UAAAA,UAAU,EAAE;AAAd,SAAjG,CAAR;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AACH,OAHD;;AAIA,YAAMC,SAAS,GAAG,MAAM;AACpBzB,QAAAA,QAAQ,CAAC,4KAAD,EAA+K;AAAEqB,UAAAA,UAAU,EAAE;AAAd,SAA/K,CAAR;AACAT,QAAAA,SAAS;AACZ,OAHD;;AAIAb,MAAAA,KAAK,CAAC2B,GAAN,CAAUvB,MAAV,EAAkBa,SAAlB,EAA6BS,SAA7B;AACH;AACJ,GAbD;;AAeA,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAAChC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEgC,OAAO,CAAC1B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAKI;AAAM,IAAA,SAAS,EAAE0B,OAAO,CAACpB,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,QAAQ,EAAEuB,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,MAAM,EAAC,QAFX;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,EAAE,EAAC,UALP;AAMI,IAAA,KAAK,EAAC,WANV;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,KAAK,EAAEV,MAAM,CAACP,QARlB;AASI,IAAA,QAAQ,EAAEe;AATd,KAUSN,MAAM,CAACT,QAAP,IAAmB;AAAE+B,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAEvB,MAAM,CAACT;AAAlC,GAV5B;AAWI,IAAA,SAAS,MAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAcI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,MAAM,EAAC,QAFX;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,KAAK,EAAC,UANV;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,EAAE,EAAC,UARP;AASI,IAAA,YAAY,EAAC,kBATjB;AAUI,IAAA,KAAK,EAAEO,MAAM,CAACN,QAVlB;AAWI,IAAA,QAAQ,EAAEc;AAXd,KAYSN,MAAM,CAACR,QAAP,IAAmB;AAAE8B,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAEvB,MAAM,CAACR;AAAlC,GAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdJ,eA4BI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,SAAS,EAAEa,OAAO,CAAClB,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAmCI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CADJ,CAnCJ,CALJ,CAFJ,eAiDI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjDJ,CADJ;AAuDH,CAnGD;;AAqGA,MAAMqC,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBL,EAAAA,GAAG,EAAE9D,OAAO,CAAC8D;AADQ,CAAzB;AAIA,eAAe/D,OAAO,CAACkE,eAAD,EAAkBE,gBAAlB,CAAP,CAA2CjC,MAA3C,CAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText, colors, decomposeColor, Link } from \"@material-ui/core\";\r\nimport useForm from \"./Form\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/client\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://www.linkedin.com/in/alizawhitman/\">\r\n                Aliza Whitman linkedin\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst initialFieldValues = {\r\n    id: '',\r\n    firstName: '',\r\n    userName: '',\r\n    password: ''\r\n}\r\n\r\nconst SignIn = ({ ...props }) => {\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const validation = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('userName' in fieldValues)\r\n            temp.userName = fieldValues.userName ? \"\" : \"This field is required.\"\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm,\r\n    } = useForm(initialFieldValues, validation)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validation()) {\r\n            const onSuccess = () => {\r\n                addToast(\"Loged In Successfully, Welcome \" + JSON.parse(localStorage.getItem(\"CurrentClient\")).userName, { appearance: 'success' })\r\n                window.location.replace(\"/queue\");\r\n            }\r\n            const onFailure = () => {\r\n                addToast(\"Sorry, but we have encountered an issue while connecting. Please make sure your details are correct, and if the problem continues please signup as a new client. Thank you\", { appearance: 'error' })\r\n                resetForm()\r\n            }\r\n            props.get(values, onSuccess, onFailure);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">Sign in</Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"UserName\"\r\n                        label=\"User Name\"\r\n                        name=\"userName\"\r\n                        value={values.userName}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.userName && { error: true, helperText: errors.userName })}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={values.password}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.password && { error: true, helperText: errors.password })}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >Sign In </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <a href=\"/signUp\" >Don't have an account? Sign Up</a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\nconst mapActionToProps = {\r\n    get: actions.get\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}