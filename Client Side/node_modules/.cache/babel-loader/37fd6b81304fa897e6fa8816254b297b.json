{"ast":null,"code":"import { ACTION_TYPES } from \"../actions/client\";\nconst initialState = {\n  client: []\n};\nexport const clients = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.GET:\n      return { ...state,\n        client: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.CREATE:\n      return { ...state,\n        client: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.UPDATE:\n      return { ...state,\n        list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n      };\n\n    case ACTION_TYPES.DELETE:\n      return { ...state,\n        list: state.list.filter(x => x.id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/beryl/Music/DogBarber/Client Side/src/reducers/clients.js"],"names":["ACTION_TYPES","initialState","client","clients","state","action","type","GET","list","payload","CREATE","UPDATE","map","x","id","DELETE","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;AAGA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAY,CAACO,GAAlB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACI,OAAvB;AAFL,OAAP;;AAKJ,SAAKT,YAAY,CAACU,MAAlB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACI,OAAvB;AAFL,OAAP;;AAKJ,SAAKT,YAAY,CAACW,MAAlB;AACI,aAAO,EACH,GAAGP,KADA;AAEHI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWI,GAAX,CAAeC,CAAC,IAAEA,CAAC,CAACC,EAAF,IAAQT,MAAM,CAACI,OAAP,CAAeK,EAAvB,GAA2BT,MAAM,CAACI,OAAlC,GAA2CI,CAA7D;AAFH,OAAP;;AAKJ,SAAKb,YAAY,CAACe,MAAlB;AACI,aAAO,EACH,GAAGX,KADA;AAEHI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWQ,MAAX,CAAkBH,CAAC,IAAEA,CAAC,CAACC,EAAF,IAAMT,MAAM,CAACI,OAAlC;AAFH,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAzBR;AA2BH,CA7BM","sourcesContent":["import { ACTION_TYPES } from \"../actions/client\";\r\n\r\nconst initialState = {\r\n    client: []\r\n}\r\nexport const clients = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ACTION_TYPES.GET:\r\n            return {\r\n                ...state,\r\n                client: [...state.list, action.payload]  \r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                client: [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x=>x.id == action.payload.id? action.payload: x)\r\n            }\r\n            \r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x=>x.id!=action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}